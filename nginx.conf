server {
    listen       80;
    server_name  localhost;

    sendfile        on;
    keepalive_timeout  65;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # CORSヘッダーなどを設定するために location ブロックは残す
    location ~ \.wasm$ {
        root   /usr/share/nginx/html;
        add_header Cache-Control "public, max-age=31536000" always;
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Accept, Content-Type" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Content-Type" always;
            add_header Content-Length 0;
            return 204;
        }
    }

    # バックエンドAPIプロキシ（CORS問題回避）
    location /api/ {
        proxy_ssl_server_name on;
        proxy_set_header Host hack-s-ikuthio-2025.vercel.app;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass https://hack-s-ikuthio-2025.vercel.app/api/;
        proxy_cache_bypass $http_cache_control;
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
    }

    # OSMタイルのリバースプロキシ（CORS回避）
    location /tiles/ {
        proxy_ssl_server_name on;
        proxy_set_header Host tile.openstreetmap.org;
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass https://tile.openstreetmap.org/;
        proxy_cache_bypass $http_cache_control;
        add_header Cache-Control "public, max-age=604800";
        add_header Access-Control-Allow-Origin "*" always;
    }

    # mapルートでwplace_leaflet.htmlを表示
    location /map {
        root /usr/share/nginx/html;
        try_files /wplace_leaflet.html =404;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
